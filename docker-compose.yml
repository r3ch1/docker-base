services:

#  portainer:
#    image: portainer/portainer:latest
#    container_name: portainer
#    command: -H unix:///var/run/docker.sock
#    restart: always
#    ports:
#      - 1000:9000
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#      - portainer_data:/data
#    networks:
#      - base_network
#  keycloak:
#    image: quay.io/keycloak/keycloak:8.0.1
##    restart: always
#    ports:
#      - 8080:8080
#    environment:
#      - DB_VENDOR=mysql
#      - DB_ADDR=mysql
#      - DB_DATABASE=keycloak
#      - DB_USER=root
#      - DB_PASSWORD=A123456
#      - KEYCLOAK_USER=admin
#      - KEYCLOAK_PASSWORD=admin
#    networks:
#      - base_network
#    container_name: keycloak
  sonarqube:
    image: sonarqube:latest
    restart: always
    ports:
      - "9000:9000"
      - "9092:9092"
    networks:
      - base_network
    container_name: sonar

  nginx:
    image: nginx:latest
    restart: always
    volumes:
      - ./docker/sites-avaliable:/etc/nginx/conf.d
      - ./docker/logs:/var/log/nginx
      - ./www:/usr/share/nginx/html
      - ./error-pages:/var/www/error-pages
    ports:
      - 80:80
    environment:
      - NGINX_PORT=80
    networks:
      - base_network
    container_name: nginx

  mysql:
    image: mysql
    container_name: mysql
    restart: always
    volumes:
      - ./docker/mysqldata:/var/lib/mysql
      - ./docker/dumps:/tmp/dump
    environment:
      - MYSQL_USER=webadm
      - MYSQL_PASSWORD=A123456
      - MYSQL_ROOT_PASSWORD=A123456
      - MYSQL_ROOT_HOST=%
    ports:
      - 3306:3306
    networks:
      - base_network

  mongo:
    image: mongo
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: A123456
    ports:
      - 27017:27017
    networks:
      - base_network

volumes:
  portainer_data:

networks:
  base_network:
    name: base_network
    driver: bridge
    ipam:
      config:
        - subnet: 10.11.0.0/24
          gateway: 10.11.0.1
